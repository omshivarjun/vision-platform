version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: vision-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-vision_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-vision_pass123}
      POSTGRES_DB: ${POSTGRES_DB:-vision_platform}
      POSTGRES_HOST_AUTH_METHOD: md5
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/postgres/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-vision_user} -d ${POSTGRES_DB:-vision_platform}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - vision-network

  # Adminer for PostgreSQL management
  adminer:
    image: adminer:latest
    container_name: vision-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres
    networks:
      - vision-network

  # pgAdmin (alternative to Adminer)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: vision-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@visionplatform.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin123}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - vision-network

volumes:
  postgres_data:
  pgadmin_data:

networks:
  vision-network:
    external: true
