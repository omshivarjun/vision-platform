name: Vision Platform CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run ESLint
        run: npm run lint || true
      - name: Type check
        run: npm run type-check:web || true

  test:
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:7
        ports: [27017:27017]
        env:
          MONGO_INITDB_ROOT_USERNAME: admin
          MONGO_INITDB_ROOT_PASSWORD: password
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis:7-alpine
        ports: [6379:6379]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
      - name: Install dependencies
        run: |
          npm ci
          cd backend && npm ci || true
          cd ../apps/web && npm ci || true
      - name: Run MongoDB migrations
        run: node scripts/migrate_mongodb.js "mongodb://admin:password@localhost:27017/vision_platform_test?authSource=admin"
      - name: Run unit tests
        run: npm test
        env:
          NODE_ENV: test
          MONGODB_URI: mongodb://admin:password@localhost:27017/vision_platform_test?authSource=admin
          REDIS_URL: redis://localhost:6379
  # Integration tests can be added here if needed
      - name: Upload coverage
        uses: codecov/codecov-action@v4
        if: always()
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
      - name: Install dependencies
        run: |
          npm ci
          cd apps/web && npm ci || true
      - name: Build application
        run: |
          npm run build:web || true
          cd backend && npm run build || true
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            apps/web/.next
            backend/dist
          retention-days: 1
